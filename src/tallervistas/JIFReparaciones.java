/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallervistas;

import java.sql.Date;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import tallerdereparaciones.Aparato;
import tallerdereparaciones.Cliente;
import tallerdereparaciones.Conexion;
import tallerdereparaciones.Reparaciones;
import tallerdereparaciones.ReparacionesData;
import tallerdereparaciones.Servicio;
import tallerdereparaciones.ServicioData;

/**
 *
 * @author SilZitoS
 */
public class JIFReparaciones extends javax.swing.JInternalFrame {

    private Conexion conexion;
    private ServicioData sd;
    private ReparacionesData rd;
    private DefaultTableModel modelo;
    
    /**
     * Creates new form JIFReparaciones
     */
    
    public JIFReparaciones() {
        try {
            initComponents();
            conexion = new Conexion();
            sd = new ServicioData(conexion);
            List<Servicio> lista = sd.obtenerServicios();
            for (Servicio x:lista){
                jcServicios.addItem(x.getDescripcion());
            }
  
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JIFReparaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        modelo=new DefaultTableModel();
        rd=new ReparacionesData(conexion);
        armarCabeceraTabla();
    }
            /**
             * This method is called from within the constructor to initialize the form.
             * WARNING: Do NOT modify this code. The content of this method is always
             * regenerated by the Form Editor.
             */
            @SuppressWarnings("unchecked")
            // <editor-fold defaultstate="collapsed" desc="Generated Code">
               
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcServicios = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAparatos = new javax.swing.JTable();
        jrbPendientes = new javax.swing.JRadioButton();
        jrbReparados = new javax.swing.JRadioButton();
        jbReparar = new javax.swing.JButton();
        jbReparado = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("REPARACIONES");

        jcServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcServiciosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Servicios:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Lista de Aparatos");

        jtAparatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtAparatos);

        jrbPendientes.setText("Pendientes");
        jrbPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPendientesActionPerformed(evt);
            }
        });

        jrbReparados.setText("Reparados");
        jrbReparados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbReparadosActionPerformed(evt);
            }
        });

        jbReparar.setText("Reparar Aparato");
        jbReparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRepararActionPerformed(evt);
            }
        });

        jbReparado.setText("Aparato Reparado");
        jbReparado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbReparadoActionPerformed(evt);
            }
        });

        jbSalir.setText("Finalizar");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jrbPendientes)
                        .addGap(177, 177, 177)
                        .addComponent(jrbReparados)
                        .addGap(177, 177, 177))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addComponent(jcServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(282, 282, 282))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(266, 266, 266))))
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jbReparar)
                .addGap(103, 103, 103)
                .addComponent(jbReparado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir)
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbPendientes)
                    .addComponent(jrbReparados))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbReparar)
                    .addComponent(jbReparado)
                    .addComponent(jbSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbPendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPendientesActionPerformed
        borrarFilas();
        jrbReparados.setSelected(false);
        CargaDatosPendientes();
    }//GEN-LAST:event_jrbPendientesActionPerformed

    private void jrbReparadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbReparadosActionPerformed
        borrarFilas();
        jrbPendientes.setSelected(false);
        CargaDatosReparados();
    }//GEN-LAST:event_jrbReparadosActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbRepararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRepararActionPerformed
        int filaSeleccionada = jtAparatos.getSelectedRow();
        
        if (filaSeleccionada !=-1){
            String d =(String)jcServicios.getSelectedItem();
            Servicio s=sd.buscarServicioPorDescripcion(d);
            int idAparato=(Integer)modelo.getValueAt(filaSeleccionada, 0);
            String nroSerie=(String)modelo.getValueAt(filaSeleccionada, 1);
            String tipo=(String)modelo.getValueAt(filaSeleccionada, 2);
            Cliente dueño=(Cliente)modelo.getValueAt(filaSeleccionada, 3);
            Date fechaIngreso=(Date)modelo.getValueAt(filaSeleccionada, 4);
            Date fechaEgreso=(Date)modelo.getValueAt(filaSeleccionada, 5);
            Aparato a = new Aparato(idAparato, nroSerie, tipo, dueño, fechaIngreso, fechaEgreso);
            Reparaciones r = new Reparaciones(s, a, Date.valueOf(LocalDate.now()), "pendiente");
            rd.guardarReparaciones(r);
            borrarFilas();
        }
        
        
    }//GEN-LAST:event_jbRepararActionPerformed

    private void jbReparadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbReparadoActionPerformed
        int filaSeleccionada = jtAparatos.getSelectedRow();
        if(filaSeleccionada !=-1){
            String d=(String)jcServicios.getSelectedItem();
            Servicio s=sd.buscarServicioPorDescripcion(d);
            int idAparato=(Integer)modelo.getValueAt(filaSeleccionada, 0);
            rd.borrarReparacionDeUnAparato(s.getIdServicio(), idAparato);
            borrarFilas();
        }
    }//GEN-LAST:event_jbReparadoActionPerformed

    private void jcServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcServiciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcServiciosActionPerformed

    public void armarCabeceraTabla(){
        //Titulo de Columnas
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Nº de Serie");
        columnas.add("Tipo");
        columnas.add("Dueño");
        columnas.add("F. de Ingreso");
        columnas.add("F. de Egreso");
        
        for(Object it:columnas){
            modelo.addColumn(it);
        }
        jtAparatos.setModel(modelo);
    }

    public void borrarFilas(){
        int a = modelo.getRowCount()-1;
        for (int i=a; i>=0; i--){
            modelo.removeRow(i);
        }
    }
    
    public void CargaDatosPendientes(){
        borrarFilas();
        String d=(String)jcServicios.getSelectedItem();
        Servicio s=sd.buscarServicioPorDescripcion(d);
        List<Aparato> listaAparatos = rd.obtenerAparatosPendientes();
        List<Aparato> la=rd.buscarAparatosPorServicioSegunListaDeAparatosPendientes(s.getIdServicio(), listaAparatos);
        for(Aparato a : la){
            modelo.addRow(new Object[]{a.getIdAparato(), a.getNroSerie(), a.getTipo(), a.getDueño(), a.getFechaIngreso(), a.getFechaEgreso()});
        }
    }
    
    public void CargaDatosReparados(){
        borrarFilas();
        
        List<Aparato> listaAparatos = rd.obtenerAparatosReparados();
        
        for(Aparato a : listaAparatos){
                modelo.addRow(new Object[]{a.getIdAparato(), a.getNroSerie(), a.getTipo(), a.getDueño(), a.getFechaIngreso(), a.getFechaEgreso()});
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbReparado;
    private javax.swing.JButton jbReparar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcServicios;
    private javax.swing.JRadioButton jrbPendientes;
    private javax.swing.JRadioButton jrbReparados;
    private javax.swing.JTable jtAparatos;
    // End of variables declaration//GEN-END:variables
}
